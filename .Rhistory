setdiff(states$name,df$State),
Year = "0",
"Race/Ethnicity" ="",
Age = "",
Age_Code = "",
STD_Cases = 0,
Population = 0,
Gender = "",
Gender_Code = "",
Rate_Calc = 0)
setdiff(states$name,df$State)
colnames(difference) = c("Disease", "State", "Year", "Race/Ethnicity", "Age", "Age_Code", "STD_Cases", "Population", "Gender",
"Gender_Code", "Rate_Calc")
test = rbind(df,difference)
test = test[order(match(test$State, states$name)),]
runApp('server.R')
############
STD1 = STD
STD = STD1 %>% filter(Disease == "Primary and Secondary Syphilis") %>% filter(Year == "1996") %>%
filter(Gender == "Male") %>% filter(Age_Code == "0-14")
View(STD1)
View(STD)
STD1 = STD1 %>% filter(Disease == "Primary and Secondary Syphilis") %>% filter(Year == "1996") %>%
filter(Gender == "Male") %>% filter(Age_Code == "0-14")
# Creating two new DT : one to summarise the cases and one to summarise the population
STD1Cases = STD1 %>% group_by(State) %>% summarise(STD_Cases = sum(STD_Cases))
STD1Pop = STD1 %>% group_by(State) %>% summarise (Population = sum(Population))
#Setting the old work as the new base for the cases
STD1 = STD1Cases
rm(STD1Cases)
#Creating the rates in the working table
STD1 = STD1 %>% mutate (RateCalc = STD1$STD_Cases * 1000 / STD1Pop$Population)
View(STD1)
View(STD1Pop)
STD1=tibble(STD1, STD1Pop$Population)
STD1=left_join(STD1, STD1Pop$Population)
STD1 = STD1 %>% mutate(Population = STD1Pop$Population)
runApp('server.R')
runApp('server.R')
dim(STD1)
dim(difference)
View(difference)
difference = tibble(setdiff(states$name,STD1$State),
STD_Cases = 0,
RateCalc = 0,
Population = 0,
)
View(difference)
dim(difference)
rm(STD1, STD1Pop)
rm(difference)
rm-df
rm(df)
rm(test)
rm(STD)
library (readr)
library (dplyr)
#Creating the inputs
states <- geojsonio::geojson_read("geojson/us-states.json", what = "sp")
varsDisease = c(
"Chlamydia" = "Chlamydia",
"Gonorrhea" = "Gonorrhea",
"Primary and Secondary Syphilis" = "Primary and Secondary Syphilis",
"All" = "All"
)
varsGender = c(
"Male" = "Male",
"Female" = "Female",
"All" = "All"
)
varsAge = c(
"0-14 years" = "0-14",
"15-19 years" = "15-19",
"20-24 years" = "20-24",
"25-29 years" = "25-29",
"30-34 years" = "30-34",
"35-39 years" = "35-39",
"More than 40 years" = "40+",
"All" = "All"
)
varsEthnia = c(
"American Indian or Alaska Native" = "American Indian or Alaska Native",
"Asian or Pacific Islander" = "Asian or Pacific Islander",
"Black or African American" = "Black or African American",
"Hispanic" = "Hispanic" ,
"White" = "White"
)
#Importing STD data
ChlamydiaF <- read_delim("data/ChlamydiaF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaF = ChlamydiaF %>% mutate(Gender = "Female", Gender_Code = "F")
ChlamydiaM <- read_delim("data/ChlamydiaM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaM = ChlamydiaM %>% mutate(Gender = "Male", Gender_Code = "M")
ChlamydiaU <- read_delim("data/ChlamydiaU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaU = ChlamydiaU %>% mutate(Gender = "Unknown", Gender_Code = "U")
GonorrheaF <- read_delim("data/GonorrheaF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaF = GonorrheaF %>% mutate(Gender = "Female", Gender_Code = "F")
GonorrheaM <- read_delim("data/GonorrheaM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaM = GonorrheaM %>% mutate(Gender = "Male", Gender_Code = "M")
GonorrheaU <- read_delim("data/GonorrheaU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaU = GonorrheaU %>% mutate(Gender = "Unknown", Gender_Code = "U")
SyphilisF <- read_delim("data/SyphilisF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisF = SyphilisF %>% mutate(Gender = "Female", Gender_Code = "F")
SyphilisM <- read_delim("data/SyphilisM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisM = SyphilisM %>% mutate(Gender = "Male", Gender_Code = "M")
SyphilisU <- read_delim("data/SyphilisU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisU = SyphilisU %>% mutate(Gender = "Unknown",Gender_Code = "U")
#Combining all the data in one DT for the map
STD = bind_rows (ChlamydiaF, ChlamydiaM, ChlamydiaU, GonorrheaF, GonorrheaM, GonorrheaU, SyphilisF, SyphilisM, SyphilisU)
rm (ChlamydiaF, ChlamydiaM, ChlamydiaU, GonorrheaF, GonorrheaM, GonorrheaU, SyphilisF, SyphilisM, SyphilisU) #Closing the old tables
colnames (STD) = c("Disease", "State", "Year", "Race/Ethnicity", "Age", "Age_Code", "STD_Cases", "Population", "Gender", "Gender_Code")
#Janitoring the data
temp = which (is.na(STD$"Population"))
if (length(temp) != 0) #VÃ©rifiyng that the vector isn't empty
{STD = STD[-c(temp),]}
write.csv(STD, "data/STD.csv")
saveRDS(STD, "data/STD.rds")
STD1 = STD
STD1 = STD1 %>% filter(Disease == "Primary and Secondary Syphilis") %>% filter(Year == "1996") %>%
filter(Gender == "Male") %>% filter(Age_Code == "0-14")
# Creating two new DT : one to summarise the cases and one to summarise the population
STD1Cases = STD1 %>% group_by(State) %>% summarise(STD_Cases = sum(STD_Cases))
STD1Pop = STD1 %>% group_by(State) %>% summarise (Population = sum(Population))
#Setting the old work as the new base for the cases
STD1 = STD1Cases
rm(STD1Cases)
#Creating the rates in the working table
STD1 = STD1 %>% mutate (RateCalc = STD1$STD_Cases * 1000 / STD1Pop$Population)
STD1 = STD1 %>% mutate(Population = STD1Pop$Population)
difference = tibble(setdiff(states$name,STD1$State),
STD_Cases = 0,
RateCalc = 0,
Population = 0,
)
View(difference)
colnames(difference) = c("State","STD_Cases", "RateCalc" , "Population")
DefinitiveSTD1 = rbind(STD1,difference)
View(DefinitiveSTD1)
DefinitiveSTD1 = DefinitiveSTD1[order(match(DefinitiveSTD1$State, states$name)),]
runApp('server.R')
runApp('server.R')
runApp('server.R')
rm(DefinitiveSTD1, difference, STD1, STD1Pop)
runApp('server.R')
library(shiny); runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
difference = tibble(Disease = "",
State = setdiff(states$name,allstateRR$State),
Year = 0,
`Race/Ethnicity` = "",
Age ="",
Age_Code = "",
STD_Cases = 0,
Population = 0,
Gender = "",
Gender_Code = ""
)
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
allstateRR = STD %>% filter(Gender == "Female") %>%
filter(Age_Code == "0-14") %>%
filter(Disease == "Chlamydia") %>%
filter(`Race/Ethnicity` == "White") %>%
filter (Year == "1996")
View(allstateRR)
difference = tibble(Disease = "",
State = setdiff(states$name,allstateRR$State),
Year = 0,
`Race/Ethnicity` = "",
Age ="",
Age_Code = "",
STD_Cases = 0,
Population = 0,
Gender = "",
Gender_Code = ""
)
View(difference)
#Fusionning the two data and ordering to use with the map
allstateRR = rbind(allstateRR,difference)
allstateRR = allstateRR[order(match(allstateRR$State, states$name)),]
contingence = contingenceTB()
library(readr)
contingence <- read_csv("data/Contingence.csv")
View(contingence)
contingence <- read_csv("data/Contingence.csv")
allstateRR = allstateRR %>%  mutate (RR = ifelse(Population != 0 & Disease != 0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),
0))
contigence[1,2]
contingence[1,2]
contingence <- read_csv("data/Contingence.csv",
col_types = cols(X1 = col_skip()))
allstateRR = allstateRR %>%  mutate (RR = ifelse(Population != 0 & Disease != 0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),
0))
allstateRR = allstateRR %>%  mutate (RR = ifelse(Population != 0 & STD_Cases != 0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),
0))
allstateRR$Population != 0 & allstateRR$STD_Cases != 0
allstateRR = allstateRR %>%  mutate (RR = ifelse(allstateRR$Population != 0 & allstateRR$STD_Cases != 0,0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),
))
allstateRR = allstateRR %>%  mutate (RR = ifelse(allstateRR$Population != 0 & allstateRR$STD_Cases != 0,0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population)
))
allstateRR = allstateRR %>%  mutate (RR = ifelse(allstateRR$Population != 0 & allstateRR$STD_Cases != 0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),0
))
View(allstateRR)
contingence [1,2] = 1000
contingence [2,2] = 1000
View(contingence)
contingence [3,2] = 2000
allstateRR = allstateRR %>%  mutate (RR = ifelse(allstateRR$Population != 0 & allstateRR$STD_Cases != 0,
(contingence[1,2] / contingence [1,4]) / (STD_Cases / Population),0
))
## Preparing the legend
maxRR = max(allstateRR$RR)
## Preparing the legend
maxRR = max(allstateRR$RR)
## Preparing the legend
maxRR = max(as.numeric(allstateRR$RR))
stepLegend = (maxRR / 9)
legendRow = c(0)
for (i in 1:9)
{
legendRow = c(legendRow, 0 + stepLegend*i)
}
legendRow[10] = legendRow[10] + 0.05
bins <- legendRow
pal <- colorBin("YlOrRd", domain = allstateRR$RR, bins = bins)
leafletProxy ("map")  %>% addPolygons(data = states,
fillColor = ~pal(allstateRR$RR),
weight = 1,
opacity = 0.7,
color = "grey",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.85,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%  clearControls() %>% addLegend(pal = pal, values = allstateRR$RR, opacity = 0.85,
title = "for 1 000 inhabitants of a class of age",
position = "bottomright")
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
pal <- choose_palette()
runApp('server.R')
runApp('server.R')
runApp('server.R')
rm(list = lm())
rm(list = ls())
library (readr)
library (dplyr)
#Creating the inputs
states <- geojsonio::geojson_read("geojson/us-states.json", what = "sp")
varsDisease = c(
"Chlamydia" = "Chlamydia",
"Gonorrhea" = "Gonorrhea",
"Primary and Secondary Syphilis" = "Primary and Secondary Syphilis",
"All" = "All"
)
varsGender = c(
"Male" = "Male",
"Female" = "Female",
"All" = "All"
)
varsAge = c(
"0-14 years" = "0-14",
"15-19 years" = "15-19",
"20-24 years" = "20-24",
"25-29 years" = "25-29",
"30-34 years" = "30-34",
"35-39 years" = "35-39",
"More than 40 years" = "40+",
"All" = "All"
)
varsEthnia = c(
"American Indian or Alaska Native" = "American Indian or Alaska Native",
"Asian or Pacific Islander" = "Asian or Pacific Islander",
"Black or African American" = "Black or African American",
"Hispanic" = "Hispanic" ,
"White" = "White"
)
#Importing STD data
ChlamydiaF <- read_delim("data/ChlamydiaF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaF = ChlamydiaF %>% mutate(Gender = "Female", Gender_Code = "F")
ChlamydiaM <- read_delim("data/ChlamydiaM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaM = ChlamydiaM %>% mutate(Gender = "Male", Gender_Code = "M")
ChlamydiaU <- read_delim("data/ChlamydiaU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
ChlamydiaU = ChlamydiaU %>% mutate(Gender = "Unknown", Gender_Code = "U")
GonorrheaF <- read_delim("data/GonorrheaF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaF = GonorrheaF %>% mutate(Gender = "Female", Gender_Code = "F")
GonorrheaM <- read_delim("data/GonorrheaM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaM = GonorrheaM %>% mutate(Gender = "Male", Gender_Code = "M")
GonorrheaU <- read_delim("data/GonorrheaU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
GonorrheaU = GonorrheaU %>% mutate(Gender = "Unknown", Gender_Code = "U")
SyphilisF <- read_delim("data/SyphilisF.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisF = SyphilisF %>% mutate(Gender = "Female", Gender_Code = "F")
SyphilisM <- read_delim("data/SyphilisM.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisM = SyphilisM %>% mutate(Gender = "Male", Gender_Code = "M")
SyphilisU <- read_delim("data/SyphilisU.txt",
"\t", escape_double = FALSE, col_types = cols(Age = col_character(),
`Age Code` = col_character(), Disease = col_character(),
`Disease Code` = col_skip(), Notes = col_skip(),
Population = col_integer(), `Race/Ethnicity` = col_character(),
`Race/Ethnicity Code` = col_skip(),
Rate = col_skip(), `STD Cases` = col_integer(),
State = col_character(), `State Code` = col_skip(),
Year = col_integer(), `Year Code` = col_skip()),
trim_ws = TRUE)
SyphilisU = SyphilisU %>% mutate(Gender = "Unknown",Gender_Code = "U")
#Combining all the data in one DT for the map
STD = bind_rows (ChlamydiaF, ChlamydiaM, ChlamydiaU, GonorrheaF, GonorrheaM, GonorrheaU, SyphilisF, SyphilisM, SyphilisU)
rm (ChlamydiaF, ChlamydiaM, ChlamydiaU, GonorrheaF, GonorrheaM, GonorrheaU, SyphilisF, SyphilisM, SyphilisU) #Closing the old tables
colnames (STD) = c("Disease", "State", "Year", "Race/Ethnicity", "Age", "Age_Code", "STD_Cases", "Population", "Gender", "Gender_Code")
#Janitoring the data
temp = which (is.na(STD$"Population"))
if (length(temp) != 0) #VÃ©rifiyng that the vector isn't empty
{STD = STD[-c(temp),]}
write.csv(STD, "data/STD.csv")
saveRDS(STD, "data/STD.rds")
runApp('server.R')
total = STD %>% group_by(State) %>% summarise (sum(Population))
View(total)
View(total)
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
library(shiny); runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
runApp('server.R')
